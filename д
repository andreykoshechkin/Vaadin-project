import java.math.BigDecimal;
import java.util.List;
import org.apache.commons.lang3.tuple.Pair;

public class ConditionHandlerChain {

    private interface ConditionHandler {
        boolean handle(List<ClientInfo> clientInfo);
    }

    private static class TypeConditionHandler implements ConditionHandler {
        @Override
        public boolean handle(List<ClientInfo> clientInfo) {
            // Проверяем наличие клиентов типа ЮР или ИП
            return clientInfo.stream().anyMatch(it -> it.getClientType().equals("ЮР") || it.getClientType().equals("ИП"));
        }
    }

    private static class KiGConditionHandler implements ConditionHandler {
        @Override
        public boolean handle(List<ClientInfo> clientInfo) {
            // Проверяем отсутствие киг 545, 546 или 547
            return !clientInfo.stream().anyMatch(it -> it.getKiG().equals(BigDecimal.valueOf(545)) ||
                                                        it.getKiG().equals(BigDecimal.valueOf(546)) ||
                                                        it.getKiG().equals(BigDecimal.valueOf(547)));
        }
    }

    private static class MatrixConditionHandler implements ConditionHandler {
        @Override
        public boolean handle(List<ClientInfo> clientInfo) {
            // Проверяем отсутствие подключенной матрицы в части переводов на ФЛ (киг 534, 535, 536)
            return !clientInfo.stream().anyMatch(it -> it.getKiG().equals(BigDecimal.valueOf(534)) ||
                                                        it.getKiG().equals(BigDecimal.valueOf(535)) ||
                                                        it.getKiG().equals(BigDecimal.valueOf(536)));
        }
    }

    public Pair<Boolean, String> result(List<ClientInfo> clientInfo) {
        ConditionHandler typeHandler = new TypeConditionHandler();
        ConditionHandler kiGHandler = new KiGConditionHandler();
        ConditionHandler matrixHandler = new MatrixConditionHandler();

        // Устанавливаем цепочку обработчиков
        typeHandler.setNext(kiGHandler).setNext(matrixHandler);

        // Обрабатываем запрос цепочкой обработчиков
        boolean flag = typeHandler.handle(clientInfo);

        return Pair.of(flag, "msg");
    }

    // Define ClientInfo class with appropriate getters
    static class ClientInfo {
        private String clientType;
        private BigDecimal kiG;

        public ClientInfo(String clientType, BigDecimal kiG) {
            this.clientType = clientType;
            this.kiG = kiG;
        }

        public String getClientType() {
            return clientType;
        }

        public BigDecimal getKiG() {
            return kiG;
        }
    }
}
